pipeline {
    agent any
    environment {
        BOLT_USER = 'clientadm'
        BOLT_PASS = credentials('clientadm-creds')
        QA_CONTAINER = '1993190p-qa-svr'
        PROD_CONTAINER = '1993190p-prod-svr'
        QA_BACKUP_IMG = 'qa-svr-image'
        PROD_BACKUP_IMG = 'prod-svr-image'
        QA_TARGET = '192.168.100.110'
        PROD_TARGET = '192.168.100.220'
    }
    stages {

        stage('Op-1990193p-S1: QA Backup & Update') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'clientadm-creds', passwordVariable: 'BOLT_PASS', usernameVariable: 'BOLT_USER')]) {
                    echo "Creating QA backup & updating QA with new index.html..."
                    sh """
                        docker rmi -f \$QA_BACKUP_IMG || true
                        docker commit \$QA_CONTAINER \$QA_BACKUP_IMG

                        # Run deployment script on QA server as root
                        bolt script run ./1990193p_script \
                            --targets \$QA_TARGET \
                            --user \$BOLT_USER \
                            --password \$BOLT_PASS \
                            --no-host-key-check \
                            --run-as root
                        echo "QA web server backup and update complete"
                    """
                }
            }
        }

        stage('Op-1990193p-S2: QA Health Check') {
            steps {
                sh """
                    curl -I http://\$QA_TARGET:80 || { echo 'QA server not responding'; exit 1; }
                """
            }
        }

        stage('Op-1990193p-S3: QA Approval to Prod') {
            steps {
                script {
                    def proceedToProd = input message: 'Proceed to Prod rollout?', ok: 'Yes', parameters: [
                        [$class: 'BooleanParameterDefinition', defaultValue: true, description: 'Proceed = true, Rollback QA = false', name: 'ProceedToProd']
                    ]
                    if (!proceedToProd) {
                        sh "docker run --rm --name \$QA_CONTAINER \$QA_BACKUP_IMG"
                        error("QA server rolled back. Aborting pipeline.")
                    }
                }
            }
        }

        stage('Op-1990193p-S4: Prod Backup & Update') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'clientadm-creds', passwordVariable: 'BOLT_PASS', usernameVariable: 'BOLT_USER')]) {
                    sh """
                        docker rmi -f \$PROD_BACKUP_IMG || true
                        docker commit \$PROD_CONTAINER \$PROD_BACKUP_IMG

                        # Run deployment script on PROD server as root
                        bolt script run ./1990193p_script \
                            --targets \$PROD_TARGET \
                            --user \$BOLT_USER \
                            --password \$BOLT_PASS \
                            --no-host-key-check \
                            --run-as root
                        echo "PROD web server backup and update complete"
                    """
                }
            }
        }

        stage('Op-1990193p-S5: PROD Health Check') {
            steps {
                sh """
                    curl -I http://\$PROD_TARGET:80 || { echo 'PROD server not responding'; exit 1; }
                """
            }
        }

        stage('Op-1990193p-S6: PROD Approval to Release') {
            steps {
                script {
                    def proceedToRelease = input message: 'Release PROD to production?', ok: 'Yes', parameters: [
                        [$class: 'BooleanParameterDefinition', defaultValue: true, description: 'Proceed = true, Rollback PROD = false', name: 'ProceedToRelease']
                    ]
                    if (!proceedToRelease) {
                        sh "docker run --rm --name \$PROD_CONTAINER \$PROD_BACKUP_IMG"
                        error("PROD server rolled back. Aborting pipeline.")
                    }
                }
            }
        }

        stage('Op-1990193p-S7: Monitoring & Ready') {
            steps {
                echo "PROD web server is monitored and ready to serve."
            }
        }

    }
}
